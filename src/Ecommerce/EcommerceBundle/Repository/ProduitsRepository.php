<?php

namespace Ecommerce\EcommerceBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ProduitsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProduitsRepository extends EntityRepository
{
	public function byCategorie($id)
	{
		$qb = $this->createQueryBuilder('p')
					->select('p')
					->where('p.categorie = :id')
					->andWhere('p.disponible = 1')
					->orderBy('p.id')
					->setParameter('id',$id);

		return $qb->getQuery()->getResult();
	}

	public function recherche($chaine)
	{
		$qb = $this->createQueryBuilder('p')
					->select('p')
					->where('p.nom LIKE :chaine')
					->andWhere('p.disponible = 1')
					->orderBy('p.id')
					->setParameter('chaine',$chaine);

		return $qb->getQuery()->getResult();
	}

	public function findArray(array $panier)
	{

			$qb = $this->createQueryBuilder('p')
				->select('p')
				->where('p.id IN (:array)')
				->setParameter('array',$panier);

			return $qb->getQuery()->getResult();

	}

	public function paginated($offset,$max)
	{
		$qb = $this->createQueryBuilder('p')
		->select('p')
		->where('p.disponible = 1')
		->setFirstResult($offset)
		->setMaxResults($max);

		return $qb->getQuery()->getResult();
	}

	public function paginatedByCategorie($offset,$max,$id)
	{
		$qb = $this->createQueryBuilder('p')
		->select('p')
		->where('p.disponible = 1')
		->andWhere('p.categorie = :id')
		->setParameter('id',$id)
		->setFirstResult($offset)
		->setMaxResults($max);

		return $qb->getQuery()->getResult();
	}

	public function paginatedRecherche($offset,$max,$chaine)
	{
		$qb = $this->createQueryBuilder('p')
					->select('p')
					->where('p.nom LIKE :chaine')
					->andWhere('p.disponible = 1')
					->setParameter('chaine',$chaine)
					->setFirstResult($offset)
					->setMaxResults($max);

		return $qb->getQuery()->getResult();
	}

}
